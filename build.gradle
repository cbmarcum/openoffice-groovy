/* ************************************************************************
 *
 * Copyright 2020 Code Builders, LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *  http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 *********************************************************************** */

plugins {
    // Apply the groovy plugin to add support for Groovy
    id 'groovy'

    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'

    /*
    The plugin builds a distribution for your library. The distribution will
    package up the runtime dependencies of the library. All files stored in
    src/main/dist will be added to the root of the archive distribution.
    You can run “gradle distZip” to create a ZIP file containing the distribution.
     */
    id 'java-library-distribution'
}

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()

    // TEMP
    // mavenLocal()

    flatDir {
        dirs 'lib'
    }
}


dependencies {
    // Use the latest Groovy version for building this library
    implementation 'org.codehaus.groovy:groovy-all:3.0.4'
    implementation("net.codebuilders:guno-extension:4.1.6.12") {
        transitive = false
    }

    // not put on runtimeClasspath since the're available to the office already
    // this way the're not added to the jar classPath or put in lib and packaged in oxt
    // compileOnly "net.codebuilders:juh:4.1.6" // not needed according to dev guide
    compileOnly "net.codebuilders:ridl:4.1.6"
    compileOnly "net.codebuilders:unoil:4.1.6"
    compileOnly "net.codebuilders:jurt:4.1.6"

    implementation files("lib/ScriptFramework.jar") // included in case jar isn't on the AOO classpath

    // Use the awesome Spock testing and specification framework
    testImplementation 'org.spockframework:spock-core:2.0-M2-groovy-3.0'
}


version = '0.5.0'

jar {
    // archiveFileName = "openoffice-groovy.jar"
    manifest {
        attributes("Built-By": "Code Builders LLC",
                "RegistrationClassName": "net.codebuilders.star.script.framework.provider.groovy.ScriptProviderForGroovy",
                "UNO-Type-Path": "",
                "Class-Path": configurations.runtimeClasspath.collect { "lib/" + it.getName() }.join(' '))
    }
}

distributions {
    main {
        // distributionBaseName = 'openoffice-groovy'
        contents {
            from {
                "$buildDir/distribution-files/application"
            }
            into '/'
            filesMatching("**/*.xml") {
                expand(project.properties)
            }
        }
    }
}


distZip {
    // archiveBaseName = 'openoffice-groovy'
    archiveExtension = 'oxt'
    entryCompression = ZipEntryCompression.STORED
}
